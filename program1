#include <linux/module.h>
#include <linux/kernel.h>
#include <linux/fs.h>
#include <linux/uaccess.h>

static int __init modifkernel_init(void)
{
    struct file *file;
    ssize_t ret;

    file = filp_open("modifkernel.txt", O_WRONLY | O_CREAT, 0644);
    if (IS_ERR(file)) {
        pr_err("Failed to create the file\n");
        return PTR_ERR(file);
    }

    ret = kernel_write(file, "modifkernel\n", strlen("modifkernel\n"), &file->f_pos);
    if (ret < 0) {
        pr_err("Failed to write to the file\n");
        goto out;
    }

    filp_close(file, NULL);

    pr_info("modifkernel");
    return 0;

out:
    filp_close(file, NULL);
    return ret;
}

static void __exit modifkernel_exit(void)
{
    pr_info("modifkernel");
}

module_init(modifkernel_init);
module_exit(modifkernel_exit);
MODULE_LICENSE("GPL");
MODULE_AUTHOR("Your Name");
MODULE_DESCRIPTION("modifkernel");
